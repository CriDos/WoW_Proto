package bgs.protocol.friends.v1;
import "bgs/low/pb/client/attribute_types.proto";
import "bgs/low/pb/client/entity_types.proto";
import "bgs/low/pb/client/friends_types.proto";
import "bgs/low/pb/client/invitation_types.proto";
import "bgs/low/pb/client/rpc_types.proto";
message SubscribeRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required uint64 object_id = 2;
	optional .bgs.protocol.ObjectAddress forward = 3;
}
message UnsubscribeRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	optional uint64 object_id = 2;
	optional .bgs.protocol.ObjectAddress forward = 3;
}
message SendInvitationRequest {
	optional .bgs.protocol.Identity agent_identity = 1;
	required .bgs.protocol.EntityId target_id = 2;
	required .bgs.protocol.InvitationParams params = 3;
}
message RevokeInvitationRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	optional fixed64 invitation_id = 2;
}
message AcceptInvitationRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required fixed64 invitation_id = 3;
	optional .bgs.protocol.friends.v1.AcceptInvitationOptions options = 4;
}
message DeclineInvitationRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required fixed64 invitation_id = 3;
}
message IgnoreInvitationRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required fixed64 invitation_id = 3;
	optional fixed32 program = 4;
}
message RemoveFriendRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required .bgs.protocol.EntityId target_id = 2;
}
message RevokeAllInvitationsRequest {
	optional .bgs.protocol.EntityId agent_id = 2;
}
message ViewFriendsRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required .bgs.protocol.EntityId target_id = 2;
}
message ViewFriendsResponse {
	repeated .bgs.protocol.friends.v1.FriendOfFriend friends = 1;
}
message UpdateFriendStateRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required .bgs.protocol.EntityId target_id = 2;
	repeated .bgs.protocol.Attribute attribute = 3;
}
message GetFriendListRequest {
	optional .bgs.protocol.EntityId agent_id = 2;
}
message GetFriendListResponse {
	repeated .bgs.protocol.friends.v1.Friend friends = 1;
}
message CreateFriendshipRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	optional .bgs.protocol.EntityId target_id = 2;
	repeated uint32 role = 3;
}
message FriendNotification {
	required .bgs.protocol.friends.v1.Friend target = 1;
	optional .bgs.protocol.EntityId account_id = 5;
	optional .bgs.protocol.ObjectAddress forward = 6;
}
message UpdateFriendStateNotification {
	required .bgs.protocol.friends.v1.Friend changed_friend = 1;
	optional .bgs.protocol.EntityId account_id = 5;
	optional .bgs.protocol.ObjectAddress forward = 6;
}
message InvitationNotification {
	required .bgs.protocol.friends.v1.ReceivedInvitation invitation = 1;
	optional uint32 reason = 3 [default = 0];
	optional .bgs.protocol.EntityId account_id = 5;
	optional .bgs.protocol.ObjectAddress forward = 6;
}
message SentInvitationAddedNotification {
	optional .bgs.protocol.EntityId account_id = 1;
	optional .bgs.protocol.friends.v1.SentInvitation invitation = 2;
	optional .bgs.protocol.ObjectAddress forward = 3;
}
message SentInvitationRemovedNotification {
	optional .bgs.protocol.EntityId account_id = 1;
	optional fixed64 invitation_id = 2;
	optional uint32 reason = 3;
	optional .bgs.protocol.ObjectAddress forward = 4;
}
